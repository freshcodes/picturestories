{"version":3,"sources":["webpack:///./routes/home/style.css","webpack:///./components/story-composer/style.css","webpack:///./components/hieroglyph-chart/style.css","webpack:///./components/hieroglyph-category-selector/style.css","webpack:///./components/hieroglyph-category-selector/index.js","webpack:///./components/hieroglyph-chart/index.js","webpack:///./components/story-composer/index.js","webpack:///./routes/home/index.js","webpack:///./components/story-board/style.css","webpack:///./components/story-board/index.js","webpack:///../node_modules/lz-string/libs/lz-string.js","webpack:///./lib/getSymbols.js","webpack:///./components/hieroglyph/style.css","webpack:///./components/hieroglyph/index.js","webpack:///./lib/hieroglyphs.js"],"names":["HieroglyphCategorySelector","Component","category","event","target","value","this","setState","props","onCategoryChange","componentDidMount","max","hieroglyphs","categories","length","index","Math","floor","random","name","render","options","map","cat","key","class","style","state","oninput","categoryChange","HieroglyphChart","glyphs","glyph","onGlyphClick","categoryName","glyphsByCategoryName","num","StoryComposer","saving","push","splice","codes","join","compressed","LZString","compressToEncodedURIComponent","route","removeGlyph","emptyMessage","type","onClick","shareStory","disabled","addGlyph","Home","StoryBoard","getBaseValue","alphabet","character","baseReverseDic","i","charAt","f","String","fromCharCode","keyStrBase64","keyStrUriSafe","compressToBase64","input","res","_compress","a","decompressFromBase64","_decompress","compressToUTF16","decompressFromUTF16","charCodeAt","compressToUint8Array","uncompressed","compress","buf","Uint8Array","TotalLen","current_value","decompressFromUint8Array","decompress","Array","result","forEach","c","decompressFromEncodedURIComponent","replace","bitsPerChar","getCharFromInt","ii","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","Object","prototype","hasOwnProperty","call","pow","resetValue","getNextValue","w","bits","resb","maxpower","power","dictionary","enlargeIn","dictSize","numBits","entry","data","val","position","define","module","exports","string","output","charCode","slice","str","glyphsFromIntRange","range","arr","l","end","start","hex","toString","strFromHex","fromCodePoint","overallRange","exclusionRange","categoryObj","filter","areCharactersInRange","chars","symbols","getSymbols","isCharaterInRange","isCharacterInRange","char","codePoint","codePointAt","glyphsFromCodesArray","randomCharacterInRange"],"mappings":"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","file":"route-home.chunk.f5b6e.esm.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__uRcqa\"};","// extracted by mini-css-extract-plugin\nexport default {\"storycomposer\":\"storycomposer__ezoHr\"};","// extracted by mini-css-extract-plugin\nexport default {\"chart\":\"chart__rVU3F\"};","// extracted by mini-css-extract-plugin\nexport default {\"categoryselector\":\"categoryselector__7A-02\"};","import { h, Component } from 'preact'\nimport style from './style.css'\n\nimport hieroglyphs from '../../lib/hieroglyphs.js'\n\nexport default class HieroglyphCategorySelector extends Component {\n  state = {\n    category: ''\n  }\n\n  categoryChange = (event) => {\n    const category = event.target.value\n    this.setState({ category })\n    this.props.onCategoryChange(category)\n  }\n\n  componentDidMount () {\n    const max = hieroglyphs.categories.length\n    const index = Math.floor(Math.random() * max)\n    const category = hieroglyphs.categories[index].name\n    this.setState({ category })\n    this.props.onCategoryChange(category)\n  }\n\n  render () {\n    const options = hieroglyphs.categories.map((cat) => (<option key={cat.name} value={cat.name}>{cat.name}</option>))\n    return (\n      <select aria-label='Hieroglyph Categories' class={style.categoryselector} value={this.state.category} oninput={this.categoryChange}>\n        {options}\n      </select>\n    )\n  }\n}\n","import { h, Component } from 'preact'\nimport style from './style.css'\n\nimport hieroglyphs from '../../lib/hieroglyphs.js'\nimport HieroglyphCategorySelector from '../hieroglyph-category-selector'\nimport Hieroglyph from '../hieroglyph'\n\nexport default class HieroglyphChart extends Component {\n  state = {\n    glyphs: []\n  }\n\n  onGlyphClick = (glyph, index) => {\n    if (this.props.onGlyphClick) this.props.onGlyphClick(glyph, index)\n  }\n\n  onCategoryChange = (categoryName) => {\n    this.setState({ glyphs: hieroglyphs.glyphsByCategoryName(categoryName) })\n  }\n\n  render () {\n    const glyphs = this.state.glyphs.map((glyph, index) => <Hieroglyph key={glyph.num} index={index} onGlyphClick={(event) => this.onGlyphClick(glyph, index)} glyph={glyph} />)\n    return (\n      <div class={style.chart}>\n        <HieroglyphCategorySelector onCategoryChange={this.onCategoryChange} />\n        <div>\n          {glyphs}\n        </div>\n      </div>\n    )\n  }\n}\n","import { h, Component } from 'preact'\nimport { route } from 'preact-router'\nimport LZString from 'lz-string'\nimport style from './style.css'\n\nimport HieroglyphChart from '../../components/hieroglyph-chart'\nimport StoryBoard from '../../components/story-board'\n\nexport default class StoryComposer extends Component {\n  state = {\n    glyphs: [],\n    saving: false\n  }\n\n  addGlyph = (glyph, index) => {\n    const glyphs = this.state.glyphs\n    glyphs.push(glyph)\n    this.setState({ glyphs: this.state.glyphs })\n  }\n\n  removeGlyph = (glyph, index) => {\n    const glyphs = this.state.glyphs\n    glyphs.splice(index, 1)\n    this.setState({ glyphs: glyphs })\n  }\n\n  shareStory = () => {\n    const codes = this.state.glyphs.map(glyph => glyph.num).join(',')\n    const compressed = LZString.compressToEncodedURIComponent(codes)\n    route(`/story?${compressed}`)\n  }\n\n  render () {\n    return (\n      <div class={style.storycomposer}>\n        <StoryBoard glyphs={this.state.glyphs} onGlyphClick={this.removeGlyph} emptyMessage='Click Hieroglyphs below to create your story' />\n        <button type='button' onClick={this.shareStory} disabled={!this.state.glyphs.length || this.state.saving}>Share Story</button>\n        <HieroglyphChart onGlyphClick={this.addGlyph} />\n      </div>\n    )\n  }\n}\n","import { h } from 'preact'\nimport style from './style.css'\n\nimport StoryComposer from '../../components/story-composer'\n\nconst Home = () => (\n  <main class={style.home}>\n    <StoryComposer />\n  </main>\n)\n\nexport default Home\n","// extracted by mini-css-extract-plugin\nexport default {\"storyboard\":\"storyboard__wSo3M\"};","import { h, Component } from 'preact'\nimport style from './style.css'\n\nimport Hieroglyph from '../hieroglyph'\n\nexport default class StoryBoard extends Component {\n  onGlyphClick = (glyph, index) => {\n    if (this.props.onGlyphClick) this.props.onGlyphClick(glyph, index)\n  }\n\n  render () {\n    const glyphs = (this.props.glyphs || []).map((glyph, index) => <Hieroglyph key={glyph.num} index={index} onGlyphClick={(event) => this.onGlyphClick(glyph, index)} glyph={glyph} />)\n    const emptyMessage = <p>{this.props.emptyMessage}</p>\n    return (\n      <div class={style.storyboard}>\n        {glyphs.length ? glyphs : emptyMessage}\n      </div>\n    )\n  }\n}\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","// https://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\nfunction getSymbols (string) {\n  let index = 0\n  const length = string.length\n  const output = []\n  for (; index < length - 1; ++index) {\n    let charCode = string.charCodeAt(index)\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      charCode = string.charCodeAt(index + 1)\n      if (charCode >= 0xDC00 && charCode <= 0xDFFF) {\n        output.push(string.slice(index, index + 2))\n        ++index\n        continue\n      }\n    }\n    output.push(string.charAt(index))\n  }\n  output.push(string.charAt(index))\n  return output\n}\n\nmodule.exports = getSymbols\n","// extracted by mini-css-extract-plugin\nexport default {\"hieroglyph\":\"hieroglyph__kjjGG\"};","import { h } from 'preact'\nimport style from './style.css'\n\nexport default function ({ glyph, index, onGlyphClick }) {\n  onGlyphClick = onGlyphClick || function () {}\n  return (\n    <button type='button' class={style.hieroglyph + ' hieroglyph'} onClick={(event) => onGlyphClick(glyph, index)}>{glyph.str}</button>\n  )\n}\n","import getSymbols from './getSymbols'\n\n// https://en.wikipedia.org/wiki/Gardiner%27s_sign_list\nconst categories = [\n  {\n    name: 'Man and his occupations',\n    codes: { start: 77824, end: 77903 } // 1300 - 1304f\n  },\n  {\n    name: 'Woman and her occupations',\n    codes: { start: 77904, end: 77914 } // 13050 - 1305a\n  },\n  {\n    name: 'Anthropomorphic deities',\n    codes: { start: 77915, end: 77941 } // 1305b - 13075\n  },\n  {\n    name: 'Parts of the human body',\n    codes: { start: 77942, end: 78024 } // 13076 - 130c8\n  },\n  // There is a chunk of characters that seem to be unclassified (not even in the unclassified classification) here: 130c9 - 130d1\n  {\n    name: 'Mammals',\n    codes: { start: 78034, end: 78077 } // 130d2 - 130fd\n  },\n  {\n    name: 'Parts of mammals',\n    codes: { start: 78078, end: 78142 } // 130fe - 1313e\n  },\n  {\n    name: 'Birds',\n    codes: { start: 78143, end: 78206 } // 1313f - 1317e\n  },\n  {\n    name: 'Parts of birds',\n    codes: { start: 78207, end: 78215 } // 1317f - 13187\n  },\n  {\n    name: 'Amphibious animals, reptiles, etc.',\n    codes: { start: 78216, end: 78234 } // 13188 - 1319a\n  },\n  {\n    name: 'Fish and parts of fish',\n    codes: { start: 78235, end: 78242 } // 1319b - 131a2\n  },\n  {\n    name: 'Invertebrates and lesser animals',\n    codes: { start: 78243, end: 78252 } // 131a3 - 131ac\n  },\n  {\n    name: 'Trees and plants',\n    codes: { start: 78253, end: 78318 } // 131ad - 131ee\n  },\n  {\n    name: 'Sky, earth, water',\n    codes: { start: 78319, end: 78415 } // 131ef - 1324f\n  },\n  {\n    name: 'Buildings, parts of buildings, etc.',\n    codes: { start: 78416, end: 78490 } // 13250 - 1329a\n  },\n  {\n    name: 'Ships and parts of ships',\n    codes: { start: 78491, end: 78503 } // 1329b - 132a7\n  },\n  {\n    name: 'Domestics and funerary furniture',\n    codes: { start: 78504, end: 78510 } // 132a8 - 132ae\n  },\n  {\n    name: 'Temple furniture and sacred emblems',\n    codes: { start: 78511, end: 78544 } // 132af - 132d0\n  },\n  {\n    name: 'Crowns, dress, staves, etc.',\n    codes: { start: 78545, end: 78598 } // 132d1 - 13306\n  },\n  {\n    name: 'Warfare, hunting, and butchery',\n    codes: { start: 78599, end: 78642 } // 13307 - 13332\n  },\n  {\n    name: 'Agriculture, crafts, and professions',\n    codes: { start: 78643, end: 78689 } // 13333 - 13361\n  },\n  {\n    name: 'Rope, fiber, baskets, bags, etc.',\n    codes: { start: 78690, end: 78766 } // 13362 - 133ae\n  },\n  {\n    name: 'Vessels of stone and earthenware',\n    codes: { start: 78767, end: 78798 } // 133af - 133ce\n  },\n  {\n    name: 'Loaves and cakes',\n    codes: { start: 78799, end: 78810 } // 133cf - 133da\n  },\n  {\n    name: 'Writings, games, music',\n    codes: { start: 78811, end: 78819 } // 133db - 133e3\n  },\n  {\n    name: 'Strokes, signs derived from Hieratic, geometrical figures',\n    codes: { start: 78820, end: 78860 } // 133e4 - 1340c\n  },\n  {\n    name: 'Unclassified',\n    codes: { start: 78861, end: 78879 } // 1340d - 1341f\n  }\n]\n\nconst overallRange = { start: 77824, end: 78879 }\nconst exclusionRange = { start: 78025, end: 78033 }\n\nfunction randomCharacterInRange () {\n  const codePoint = Math.floor(Math.random() * (overallRange.end - overallRange.start)) + overallRange.start\n  if (codePoint > exclusionRange.start && codePoint < exclusionRange.end) return randomCharacterInRange()\n  else {\n    return strFromHex(codePoint.toString(16))\n  }\n}\n\nfunction glyphsFromIntRange (range) {\n  const arr = []\n  for (let i = 0, l = range.end - range.start; i <= l; i++) {\n    const num = i + range.start\n    const hex = num.toString(16)\n    const str = strFromHex(hex)\n    arr.push({ num, hex, str })\n  }\n  return arr\n}\n\nfunction glyphsFromCodesArray (codes) {\n  return codes.map((num) => {\n    const hex = num.toString(16)\n    const str = strFromHex(hex)\n    return { num, hex, str }\n  })\n}\n\nfunction glyphsByCategoryName (name) {\n  const categoryObj = categories.filter((category) => category.name === name)\n  return !categoryObj ? [] : glyphsFromIntRange(categoryObj[0].codes)\n}\n\nfunction areCharactersInRange (chars) {\n  const symbols = getSymbols(chars)\n  for (let i = 0; i <= symbols.length; ++i) {\n    if (!this.isCharaterInRange(symbols[i])) return false\n  }\n  return true\n}\n\nfunction isCharacterInRange (char) {\n  const codePoint = char.codePointAt(0)\n  return (codePoint >= overallRange.start && codePoint < exclusionRange.start) || (codePoint > exclusionRange.end && codePoint <= overallRange.end)\n}\n\nfunction strFromHex (hex) {\n  return String.fromCodePoint(`0x${hex}`)\n}\n\nexport default {\n  glyphsByCategoryName,\n  areCharactersInRange,\n  isCharacterInRange,\n  glyphsFromIntRange,\n  glyphsFromCodesArray,\n  strFromHex,\n  randomCharacterInRange,\n  categories\n}\n"],"sourceRoot":""}